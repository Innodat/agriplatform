create schema if not exists finance;

-- tables.ddl: SQL DDL for purchase and receipt tables (PostgreSQL/Supabase compatible)

CREATE TABLE IF NOT EXISTS finance.expense_category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR,
    is_active BOOLEAN DEFAULT TRUE,
    created_by uuid references identity.users(id) on delete set null,
    created_at timestamptz DEFAULT now(),
    updated_by uuid references identity.users(id) on delete set null,
    updated_at timestamptz DEFAULT now()
);

-- Expense Type Table
CREATE TABLE IF NOT EXISTS finance.expense_type (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    expense_category_id BIGINT REFERENCES finance.expense_category(id) ON DELETE CASCADE,
    name VARCHAR NOT NULL,
    description VARCHAR,
    is_active BOOLEAN DEFAULT TRUE,
    created_by uuid references identity.users(id) on delete set null,
    created_at timestamptz DEFAULT now(),
    updated_by uuid references identity.users(id) on delete set null,
    updated_at timestamptz DEFAULT now()
);

-- Currency Table
CREATE TABLE IF NOT EXISTS finance.currency (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR,
    symbol VARCHAR,
    is_active BOOLEAN DEFAULT TRUE,
    created_by uuid references identity.users(id) on delete set null,
    created_at timestamptz DEFAULT now(),
    updated_by uuid references identity.users(id) on delete set null,
    updated_at timestamptz DEFAULT now()
);

CREATE TABLE IF NOT EXISTS finance.receipt (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    is_active BOOLEAN DEFAULT TRUE,
    created_by uuid references identity.users(id) on delete set null,
    created_at timestamptz DEFAULT now(),
    updated_by uuid references identity.users(id) on delete set null,
    updated_at timestamptz DEFAULT now()
);

CREATE TABLE IF NOT EXISTS finance.purchase (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    receipt_id BIGINT REFERENCES finance.receipt(id),
    expense_type_id BIGINT REFERENCES finance.expense_type(id),
    other_category VARCHAR,
    currency_id BIGINT REFERENCES finance.currency(id),
    user_id UUID REFERENCES auth.users(id),
    amount NUMERIC(1000,2) NOT NULL,
    reimbursable BOOLEAN NOT NULL,
    captured_timestamp TIMESTAMP NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_by uuid references identity.users(id) on delete set null,
    created_at timestamptz DEFAULT now(),
    updated_by uuid references identity.users(id) on delete set null,
    updated_at timestamptz DEFAULT now()
);

-- Indexes for performance
CREATE INDEX IF NOT EXISTS idx_purchase_user_id ON finance.purchase(user_id);
CREATE INDEX IF NOT EXISTS idx_purchase_receipt_id ON finance.purchase(receipt_id);
CREATE INDEX IF NOT EXISTS idx_purchase_expense_type_id ON finance.purchase(expense_type_id);
CREATE INDEX IF NOT EXISTS idx_expense_type_category_id ON finance.expense_type(expense_category_id);

CREATE INDEX IF NOT EXISTS idx_purchase_created_by ON finance.purchase (created_by);
CREATE INDEX IF NOT EXISTS idx_receipt_created_by ON finance.receipt (created_by);
CREATE INDEX IF NOT EXISTS idx_expense_category_created_by ON finance.expense_category (created_by);
CREATE INDEX IF NOT EXISTS idx_expense_type_created_by ON finance.expense_type (created_by);
CREATE INDEX IF NOT EXISTS idx_currency_created_by ON finance.currency (created_by);

CREATE INDEX IF NOT EXISTS idx_purchase_updated_by ON finance.purchase (updated_by);
CREATE INDEX IF NOT EXISTS idx_receipt_updated_by ON finance.receipt (updated_by);
CREATE INDEX IF NOT EXISTS idx_expense_category_updated_by ON finance.expense_category (updated_by);
CREATE INDEX IF NOT EXISTS idx_expense_type_updated_by ON finance.expense_type (updated_by);
CREATE INDEX IF NOT EXISTS idx_currency_updated_by ON finance.currency (updated_by);

alter table finance.purchase enable row level security;
alter table finance.receipt enable row level security;
alter table finance.expense_category enable row level security;
alter table finance.expense_type enable row level security;
alter table finance.currency enable row level security;
